#include <iostream>
#include<vector>
using namespace std;
vector<int> merge(vector<int>&v,int p,int q, int r){
    int i,n_1,n_2;
    int s,t;
    int infty = 2147483647;//单精度整型上界
    vector<int> v_1,v_2,v0;
    for(i = p;i<=q;i++){
        v_1.push_back(v[i]);
    }
    for(i = q+1;i<=r;i++){
        v_2.push_back(v[i]);
    }
    n_1 = q-p+1; n_2 = r-q;
    v_1.push_back(infty);v_2.push_back(infty);
    s=0;t=0;
    for(i = p; i<=r ; i++){
        if(s<n_1 && t<n_2){
            if(v_1[s]<v_2[t]){v0.push_back(v_1[s]);s=s+1;}
            else {v0.push_back(v_2[t]);t=t+1;}
        }
        else{
            if(s==n_1){v0.push_back(v_2[t]);t+=1;}
            else{v0.push_back(v_1[s]);s+=1;}
        }
    }
    return v0;
}
vector<int> vectorsort(vector<int>&v){
    int n;vector<int> v_1,v_2;int i;
    n = v.size();
    if (n == 1){return v;}
    else{
        for(i = 0;i<n/2;i++){
            v_1.push_back(v[i]);
        }
        for(i = n/2;i<=n-1;i++){
            v_2.push_back(v[i]);
        }
        v_1 = vectorsort(v_1);v_2 = vectorsort(v_2);
        for(i = 0;i<n/2;i++){
            v[i] = v_1[i];
            
        }
        for(i = n/2;i<=n-1;i++){
            v[i] = v_2[i-n/2];
        }
        v=merge(v, 0, n/2-1, n-1);
        return v;
    }
}

int main(int argc, const char * argv[]) {
    vector<int> vec;
    int n,newnumber,i;
    cin>>n;
    for(i=0;i<n;i++){
        cin>>newnumber;
        vec.push_back(newnumber);
    }
    vec = vectorsort(vec);
    //vec = merge(vec,0,(n-1)/2,n-1);
    for(i =0;i<n;i++){cout<<vec[i]<<endl;}
    return 0;
}
